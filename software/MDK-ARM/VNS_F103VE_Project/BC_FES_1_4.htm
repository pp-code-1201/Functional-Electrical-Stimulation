<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [VNS_F103VE_Project\BC_FES_1_4.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image VNS_F103VE_Project\BC_FES_1_4.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Fri Mar 17 14:34:17 2023
<BR><P>
<H3>Maximum Stack Usage =        272 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from stm32f1xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from stm32f1xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32f1xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from stm32f1xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from stm32f1xx_it.o(i.TIM4_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from stm32f1xx_it.o(i.TIM5_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from stm32f1xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[49]">UART_DMAAbortOnError</a> from stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f1xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[55]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[123]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[124]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[125]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[126]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[127]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[128]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_USART1_DATA_PROCESS
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_response_data
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
</UL>

<P><STRONG><a name="[12b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Val
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Val
</UL>

<P><STRONG><a name="[12c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[50]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[12d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[12e]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>ADC_ConversionStop_Disable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f1xx_hal_adc.o(i.ADC_ConversionStop_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_ConversionStop_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Stop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[58]"></a>ADC_Enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, stm32f1xx_hal_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
</UL>

<P><STRONG><a name="[59]"></a>BC_Ch1_Pwm_Off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tim.o(i.BC_Ch1_Pwm_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BC_Ch1_Pwm_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_countdown_time
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[5b]"></a>BC_Ch1_Pwm_On</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tim.o(i.BC_Ch1_Pwm_On))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_countdown_time
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>

<P><STRONG><a name="[e6]"></a>BC_Ch1_Pwm_Onoff_Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tim.o(i.BC_Ch1_Pwm_Onoff_Flag))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[5d]"></a>BC_Ch2_Pwm_Off</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tim.o(i.BC_Ch2_Pwm_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BC_Ch2_Pwm_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[5e]"></a>BC_Ch2_Pwm_On</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tim.o(i.BC_Ch2_Pwm_On))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[5f]"></a>BC_DAC1_Set_Level</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dac.o(i.BC_DAC1_Set_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BC_DAC1_Set_Level &rArr; BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action_pwm_dac_half
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action_pwm_dac
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer3_Ch1_Pwm_Process
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>

<P><STRONG><a name="[60]"></a>BC_DAC1_Set_Val</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dac.o(i.BC_DAC1_Set_Val))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
</UL>

<P><STRONG><a name="[62]"></a>BC_DAC1_Start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dac.o(i.BC_DAC1_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BC_DAC1_Start &rArr; HAL_DAC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>

<P><STRONG><a name="[64]"></a>BC_DAC1_Stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dac.o(i.BC_DAC1_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BC_DAC1_Stop &rArr; BC_DAC1_Set_Level &rArr; BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[66]"></a>BC_DAC2_Set_Level</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dac.o(i.BC_DAC2_Set_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BC_DAC2_Set_Level &rArr; BC_DAC2_Set_Val &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer4_Ch2_Pwm_Process
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[67]"></a>BC_DAC2_Set_Val</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dac.o(i.BC_DAC2_Set_Val))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BC_DAC2_Set_Val &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Level
</UL>

<P><STRONG><a name="[68]"></a>BC_DAC2_Start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dac.o(i.BC_DAC2_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BC_DAC2_Start &rArr; HAL_DAC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[69]"></a>BC_DAC2_Stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dac.o(i.BC_DAC2_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BC_DAC2_Stop &rArr; HAL_DAC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[6a]"></a>BC_FES_cha_countdown_time</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, app.o(i.BC_FES_cha_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = BC_FES_cha_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time_Ex
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_countdown_time
</UL>

<P><STRONG><a name="[71]"></a>BC_FES_cha_parse_data</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app.o(i.BC_FES_cha_parse_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BC_FES_cha_parse_data &rArr; BC_FES_cha_upper_set_para &rArr; MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_upper_set_para
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_swallow_set_para
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_parse_data
</UL>

<P><STRONG><a name="[74]"></a>BC_FES_cha_restart_countdown_time</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app.o(i.BC_FES_cha_restart_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BC_FES_cha_restart_countdown_time
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_On
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[6d]"></a>BC_FES_cha_set_stimulation_time</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app.o(i.BC_FES_cha_set_stimulation_time))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_upper_set_para
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_swallow_set_para
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_restart_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[72]"></a>BC_FES_cha_swallow_set_para</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app.o(i.BC_FES_cha_swallow_set_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_FES_cha_swallow_set_para &rArr; MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>

<P><STRONG><a name="[73]"></a>BC_FES_cha_upper_set_para</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app.o(i.BC_FES_cha_upper_set_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_FES_cha_upper_set_para &rArr; MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_cha_entery_screen
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>

<P><STRONG><a name="[77]"></a>BC_FES_chb_countdown_time</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, app.o(i.BC_FES_chb_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time_Ex
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_4
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_chb_stimulate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_countdown_time
</UL>

<P><STRONG><a name="[7a]"></a>BC_FES_chb_restart_countdown_time</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app.o(i.BC_FES_chb_restart_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BC_FES_chb_restart_countdown_time
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_On
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[78]"></a>BC_FES_chb_set_stimulation_time</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app.o(i.BC_FES_chb_set_stimulation_time))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_upper_set_para
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_swallow_set_para
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_restart_countdown_time
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
</UL>

<P><STRONG><a name="[7b]"></a>BC_FES_chb_swallow_set_para</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app.o(i.BC_FES_chb_swallow_set_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_FES_chb_swallow_set_para &rArr; MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
</UL>

<P><STRONG><a name="[7c]"></a>BC_FES_chb_upper_set_para</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app.o(i.BC_FES_chb_upper_set_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_FES_chb_upper_set_para &rArr; MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_set_stimulation_time
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
</UL>

<P><STRONG><a name="[7d]"></a>BC_FES_countdown_time</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app.o(i.BC_FES_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_countdown_time
</UL>

<P><STRONG><a name="[7e]"></a>BC_FES_gui_key_back_process</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, app.o(i.BC_FES_gui_key_back_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BC_FES_gui_key_back_process &rArr; BC_FES_key_back_chb_stimulate &rArr; BC_FES_key_back_cha_stimulate &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Stop
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Mode_Selec_Switch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_4
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_chb_stimulate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[82]"></a>BC_FES_gui_key_down_process</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, app.o(i.BC_FES_gui_key_down_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = BC_FES_gui_key_down_process &rArr; GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Start
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Level
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Ex
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Menu_Ch_Selec
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Mode_Back
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[89]"></a>BC_FES_gui_key_ok_process</STRONG> (Thumb, 512 bytes, Stack size 16 bytes, app.o(i.BC_FES_gui_key_ok_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_On
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_Off
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Val
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Combina_Main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Mode_Selec_Switch
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Battery_Level_Icon
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_3
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_2
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_stimu_combina
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_cha_entery_screen
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_restart_countdown_time
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_restart_countdown_time
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[94]"></a>BC_FES_gui_key_up_process</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, app.o(i.BC_FES_gui_key_up_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = BC_FES_gui_key_up_process &rArr; GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Stop
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Level
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Ex
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Menu_Ch_Selec
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Mode_Back
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[6e]"></a>BC_FES_key_back_cha_stimulate</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_back_cha_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = BC_FES_key_back_cha_stimulate &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_4
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_chb_stimulate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[79]"></a>BC_FES_key_back_chb_stimulate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_back_chb_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = BC_FES_key_back_chb_stimulate &rArr; BC_FES_key_back_cha_stimulate &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
</UL>

<P><STRONG><a name="[87]"></a>BC_FES_key_down_channel_a_stimulate</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_down_channel_a_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BC_FES_key_down_channel_a_stimulate &rArr; GUI_FES_DrawImageNum_Adjust &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[88]"></a>BC_FES_key_down_channel_b_stimulate</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_down_channel_b_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BC_FES_key_down_channel_b_stimulate &rArr; GUI_FES_DrawImageNum_Adjust &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[92]"></a>BC_FES_key_ok_stimulate_cha_entery_screen</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_ok_stimulate_cha_entery_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BC_FES_key_ok_stimulate_cha_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_upper_set_para
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[91]"></a>BC_FES_key_ok_stimulate_chb_entery_screen</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_ok_stimulate_chb_entery_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_upper_set_para
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_swallow_set_para
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[95]"></a>BC_FES_key_up_channel_a_stimulate</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_up_channel_a_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BC_FES_key_up_channel_a_stimulate &rArr; GUI_FES_DrawImageNum_Adjust &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
</UL>

<P><STRONG><a name="[96]"></a>BC_FES_key_up_channel_b_stimulate</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app.o(i.BC_FES_key_up_channel_b_stimulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BC_FES_key_up_channel_b_stimulate &rArr; GUI_FES_DrawImageNum_Adjust &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
</UL>

<P><STRONG><a name="[99]"></a>BC_FES_parse_data</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app.o(i.BC_FES_parse_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BC_FES_parse_data &rArr; BC_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_response_data
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_parse_data
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>

<P><STRONG><a name="[a3]"></a>BC_FES_pc_connect_after_process</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app.o(i.BC_FES_pc_connect_after_process))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>

<P><STRONG><a name="[90]"></a>BC_FES_stimu_combina</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app.o(i.BC_FES_stimu_combina))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC_FES_stimu_combina &rArr; GUI_FES_Display_Ui_Stimu_Combina &rArr; Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Combina
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[6b]"></a>BC_Fes_Ch_Timer_Off</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tim.o(i.BC_Fes_Ch_Timer_Off))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[75]"></a>BC_Fes_Ch_Timer_On</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tim.o(i.BC_Fes_Ch_Timer_On))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_restart_countdown_time
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_restart_countdown_time
</UL>

<P><STRONG><a name="[9c]"></a>BC_Timer3_Ch1_Pwm_Process</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, tim.o(i.BC_Timer3_Ch1_Pwm_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BC_Timer3_Ch1_Pwm_Process &rArr; BC_continuous_action_pwm_dac_half &rArr; BC_DAC1_Set_Level &rArr; BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action_pwm_dac_half
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action_pwm_dac
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[9f]"></a>BC_Timer4_Ch2_Pwm_Process</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, tim.o(i.BC_Timer4_Ch2_Pwm_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BC_Timer4_Ch2_Pwm_Process &rArr; BC_DAC2_Set_Level &rArr; BC_DAC2_Set_Val &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[a0]"></a>BC_VNS_USART1_DATA_PROCESS</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app.o(i.BC_VNS_USART1_DATA_PROCESS))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = BC_VNS_USART1_DATA_PROCESS &rArr; BC_VNS_parse_rx_data &rArr; BC_check_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_task
</UL>

<P><STRONG><a name="[a1]"></a>BC_VNS_parse_rx_data</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, app.o(i.BC_VNS_parse_rx_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BC_VNS_parse_rx_data &rArr; BC_check_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Logo_Picture
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_crc_cal_value
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_pc_connect_after_process
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_parse_data
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_USART1_DATA_PROCESS
</UL>

<P><STRONG><a name="[a6]"></a>BC_VNS_water_led_init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, app.o(i.BC_VNS_water_led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = BC_VNS_water_led_init &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[a5]"></a>BC_check_response_data</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, app.o(i.BC_check_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BC_check_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Electrode_Connect_Status
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_crc_cal_value
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>

<P><STRONG><a name="[ab]"></a>BC_continuous_action</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app.o(i.BC_continuous_action))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BC_continuous_action
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
</UL>

<P><STRONG><a name="[9d]"></a>BC_continuous_action_pwm_dac</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app.o(i.BC_continuous_action_pwm_dac))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BC_continuous_action_pwm_dac &rArr; BC_DAC1_Set_Level &rArr; BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer3_Ch1_Pwm_Process
</UL>

<P><STRONG><a name="[9e]"></a>BC_continuous_action_pwm_dac_half</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app.o(i.BC_continuous_action_pwm_dac_half))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BC_continuous_action_pwm_dac_half &rArr; BC_DAC1_Set_Level &rArr; BC_DAC1_Set_Val &rArr; HAL_DAC_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer3_Ch1_Pwm_Process
</UL>

<P><STRONG><a name="[ac]"></a>BC_countdown_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app.o(i.BC_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_countdown_time
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[a2]"></a>BC_crc_cal_value</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, app.o(i.BC_crc_cal_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BC_crc_cal_value
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_response_data
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>

<P><STRONG><a name="[ad]"></a>BC_detecting_battery_voltage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app.o(i.BC_detecting_battery_voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = BC_detecting_battery_voltage &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Val
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Poweroff_Status
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Battery_Level_Icon
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_device_init_check_voltage
</UL>

<P><STRONG><a name="[af]"></a>BC_device_init_check_voltage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app.o(i.BC_device_init_check_voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = BC_device_init_check_voltage &rArr; BC_detecting_battery_voltage &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b0]"></a>BC_long_key_power_off</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app.o(i.BC_long_key_power_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BC_long_key_power_off
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
</UL>

<P><STRONG><a name="[b2]"></a>BC_mcu_init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, app.o(i.BC_mcu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = BC_mcu_init &rArr; BC_VNS_water_led_init &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_UART4_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Val
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_para_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_device_init_check_voltage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_water_led_init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>BC_para_init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app.o(i.BC_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[8e]"></a>BC_play_audio_1</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app.o(i.BC_play_audio_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_play_audio_1 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_cha_entery_screen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[8f]"></a>BC_play_audio_2</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app.o(i.BC_play_audio_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_play_audio_2 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[93]"></a>BC_play_audio_3</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app.o(i.BC_play_audio_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_play_audio_3 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[6c]"></a>BC_play_audio_4</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app.o(i.BC_play_audio_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC_play_audio_4 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[9a]"></a>BC_response_data</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, app.o(i.BC_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BC_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_crc_cal_value
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_parse_data
</UL>

<P><STRONG><a name="[bd]"></a>BC_send_hr_cycle</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app.o(i.BC_send_hr_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = BC_send_hr_cycle &rArr; BC_detecting_battery_voltage &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_long_key_power_off
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[bf]"></a>BC_task</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app.o(i.BC_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = BC_task &rArr; BC_VNS_USART1_DATA_PROCESS &rArr; BC_VNS_parse_rx_data &rArr; BC_check_response_data &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_USART1_DATA_PROCESS
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_UART4_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[c1]"></a>GUI_Display_Clear_No_Icon</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui.o(i.GUI_Display_Clear_No_Icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_Display_Clear_No_Icon &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Combina_Main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Mode_Selec_Switch
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
</UL>

<P><STRONG><a name="[6f]"></a>GUI_Display_Countdown_Time</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui.o(i.GUI_Display_Countdown_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Chb_Stimulate_Background
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Stimulate_Background
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[70]"></a>GUI_Display_Countdown_Time_Ex</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui.o(i.GUI_Display_Countdown_Time_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_countdown_time
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_countdown_time
</UL>

<P><STRONG><a name="[a4]"></a>GUI_Display_Logo_Picture</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui.o(i.GUI_Display_Logo_Picture))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_Display_Logo_Picture &rArr; LCD_Clear &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_parse_rx_data
</UL>

<P><STRONG><a name="[c8]"></a>GUI_Display_Num</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gui.o(i.GUI_Display_Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_Display_Num &rArr; Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
</UL>

<P><STRONG><a name="[8b]"></a>GUI_Display_Ui_Battery_Level_Icon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui.o(i.GUI_Display_Ui_Battery_Level_Icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_Display_Ui_Battery_Level_Icon &rArr; GUI_FES_Display_Ui_Battery_Level_Icon &rArr; Gui_Drawbmp16X &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Battery_Level_Icon
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[ca]"></a>GUI_Display_Ui_Main_Back</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui.o(i.GUI_Display_Ui_Main_Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Val
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Battery_Level_Icon
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
</UL>

<P><STRONG><a name="[7f]"></a>GUI_Display_Ui_Main_Menu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui.o(i.GUI_Display_Ui_Main_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Back
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Menu_Ch_Selec
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_water_led_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_back_cha_stimulate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[cc]"></a>GUI_DrawImageNum_Ex</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, gui.o(i.GUI_DrawImageNum_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear_Fill
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Num
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Two_Chb
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Two_Cha
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Ex
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
</UL>

<P><STRONG><a name="[cd]"></a>GUI_DrawPoint</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui.o(i.GUI_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
</UL>

<P><STRONG><a name="[c9]"></a>GUI_FES_Display_Ui_Battery_Level_Icon</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_Display_Ui_Battery_Level_Icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_FES_Display_Ui_Battery_Level_Icon &rArr; Gui_Drawbmp16X &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Level_Status
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Drawbmp16X
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Back
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Battery_Level_Icon
</UL>

<P><STRONG><a name="[85]"></a>GUI_FES_Display_Ui_Main_Ch_Mode_Back</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Ch_Mode_Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_FES_Display_Ui_Main_Ch_Mode_Back &rArr; Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Mode_Selec_Switch
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[98]"></a>GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Chb_Stimulate_Background
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Stimulate_Background
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_cha_entery_screen
</UL>

<P><STRONG><a name="[83]"></a>GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Two_Chb
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Two_Cha
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time_Ex
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[d3]"></a>GUI_FES_Display_Ui_Main_Cha_Stimulate_Background</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Cha_Stimulate_Background))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_FES_Display_Ui_Main_Cha_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch
</UL>

<P><STRONG><a name="[d2]"></a>GUI_FES_Display_Ui_Main_Chb_Stimulate_Background</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Chb_Stimulate_Background))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch
</UL>

<P><STRONG><a name="[84]"></a>GUI_FES_Display_Ui_Main_Menu_Ch_Selec</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Menu_Ch_Selec))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_FES_Display_Ui_Main_Menu_Ch_Selec &rArr; Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[d6]"></a>GUI_FES_Display_Ui_Main_Mode_Background_Swith</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Main_Mode_Background_Swith))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_FES_Display_Ui_Main_Mode_Background_Swith &rArr; Gui_DrawLine &rArr; GUI_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Mode_Selec_Switch
</UL>

<P><STRONG><a name="[81]"></a>GUI_FES_Display_Ui_Mode_Selec_Switch</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Mode_Selec_Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_FES_Display_Ui_Mode_Selec_Switch &rArr; GUI_FES_Display_Ui_Main_Mode_Background_Swith &rArr; Gui_DrawLine &rArr; GUI_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Mode_Background_Swith
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Mode_Back
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[9b]"></a>GUI_FES_Display_Ui_Stimu_Combina</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_Display_Ui_Stimu_Combina))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_FES_Display_Ui_Stimu_Combina &rArr; Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_stimu_combina
</UL>

<P><STRONG><a name="[8c]"></a>GUI_FES_Display_Ui_Stimu_Combina_Main</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui.o(i.GUI_FES_Display_Ui_Stimu_Combina_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_FES_Display_Ui_Stimu_Combina_Main &rArr; GUI_Display_Clear_No_Icon &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[8d]"></a>GUI_FES_Display_Ui_Stimu_Time</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui.o(i.GUI_FES_Display_Ui_Stimu_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_FES_Display_Ui_Stimu_Time &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_DrawImageNum_Adjust_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[97]"></a>GUI_FES_DrawImageNum_Adjust</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_DrawImageNum_Adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_FES_DrawImageNum_Adjust &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Chb_Stimulate_Background
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Stimulate_Background
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_b_stimulate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_up_channel_a_stimulate
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_b_stimulate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_down_channel_a_stimulate
</UL>

<P><STRONG><a name="[86]"></a>GUI_FES_DrawImageNum_Adjust_Ex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_DrawImageNum_Adjust_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_FES_DrawImageNum_Adjust_Ex &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
</UL>

<P><STRONG><a name="[d4]"></a>GUI_FES_DrawImageNum_Adjust_Two_Cha</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_DrawImageNum_Adjust_Two_Cha))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_FES_DrawImageNum_Adjust_Two_Cha &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
</UL>

<P><STRONG><a name="[d5]"></a>GUI_FES_DrawImageNum_Adjust_Two_Chb</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui.o(i.GUI_FES_DrawImageNum_Adjust_Two_Chb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_FES_DrawImageNum_Adjust_Two_Chb &rArr; GUI_DrawImageNum_Ex &rArr; LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Chb_Stimulate_Select
</UL>

<P><STRONG><a name="[d7]"></a>Get_Adc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, adc.o(i.Get_Adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetValue
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[dc]"></a>Get_Adc_Average</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, adc.o(i.Get_Adc_Average))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Stop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Battery_Val
</UL>

<P><STRONG><a name="[d0]"></a>Get_Adc_Battery_Level_Status</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, adc.o(i.Get_Adc_Battery_Level_Status))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Battery_Level_Icon
</UL>

<P><STRONG><a name="[ae]"></a>Get_Adc_Battery_Poweroff_Status</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adc.o(i.Get_Adc_Battery_Poweroff_Status))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
</UL>

<P><STRONG><a name="[8a]"></a>Get_Adc_Battery_Val</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, adc.o(i.Get_Adc_Battery_Val))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Back
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
</UL>

<P><STRONG><a name="[a9]"></a>Get_Adc_Electrode_Connect_Status</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.Get_Adc_Electrode_Connect_Status))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
</UL>

<P><STRONG><a name="[c7]"></a>Gui_DrawImage</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui.o(i.Gui_DrawImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Gui_DrawImage &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Mode_Background_Swith
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Chb_Stimulate_Background
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Stimulate_Background
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Back
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Num
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Combina_Main
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Combina
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Menu_Ch_Selec
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Ch_Mode_Back
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Logo_Picture
</UL>

<P><STRONG><a name="[cb]"></a>Gui_DrawLine</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gui.o(i.Gui_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Gui_DrawLine &rArr; GUI_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Mode_Background_Swith
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Chb_Stimulate_Background
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Main_Cha_Stimulate_Background
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Back
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
</UL>

<P><STRONG><a name="[d1]"></a>Gui_Drawbmp16X</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui.o(i.Gui_Drawbmp16X))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Gui_Drawbmp16X &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Battery_Level_Icon
</UL>

<P><STRONG><a name="[d8]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[db]"></a>HAL_ADC_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[df]"></a>HAL_ADC_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[e0]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, adc.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[da]"></a>HAL_ADC_PollForConversion</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_PollForConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[d9]"></a>HAL_ADC_Start</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADC_Start &rArr; ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[dd]"></a>HAL_ADC_Stop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_adc.o(i.HAL_ADC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_Stop &rArr; ADC_ConversionStop_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[11a]"></a>HAL_DAC_ConfigChannel</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f1xx_hal_dac.o(i.HAL_DAC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DAC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC_Init
</UL>

<P><STRONG><a name="[e3]"></a>HAL_DAC_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f1xx_hal_dac.o(i.HAL_DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC_Init
</UL>

<P><STRONG><a name="[e4]"></a>HAL_DAC_MspInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dac.o(i.HAL_DAC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
</UL>

<P><STRONG><a name="[61]"></a>HAL_DAC_SetValue</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, stm32f1xx_hal_dac.o(i.HAL_DAC_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DAC_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Set_Val
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Set_Val
</UL>

<P><STRONG><a name="[63]"></a>HAL_DAC_Start</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f1xx_hal_dac.o(i.HAL_DAC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DAC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Start
</UL>

<P><STRONG><a name="[65]"></a>HAL_DAC_Stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f1xx_hal_dac.o(i.HAL_DAC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DAC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC2_Stop
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
</UL>

<P><STRONG><a name="[10a]"></a>HAL_DMA_Abort</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[108]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RESET
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_device_init_check_voltage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_water_led_init
</UL>

<P><STRONG><a name="[e5]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Onoff_Flag
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_DAC1_Stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Ui_Main_Menu
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_up_process
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_ok_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_down_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BC_FES_gui_key_ok_process &rArr; BC_FES_key_ok_stimulate_chb_entery_screen &rArr; GUI_FES_Display_Ui_Main_Ch_Stimulate_Switch &rArr; GUI_FES_Display_Ui_Main_Chb_Stimulate_Background &rArr; GUI_Display_Countdown_Time &rArr; LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[e1]"></a>HAL_GPIO_Init</STRONG> (Thumb, 462 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[11b]"></a>HAL_GPIO_REMAP_CONFIG</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gpio.o(i.HAL_GPIO_REMAP_CONFIG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_REMAP_CONFIG
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[b1]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_long_key_power_off
</UL>

<P><STRONG><a name="[80]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RESET
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_16Bit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear_Fill
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_long_key_power_off
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_detecting_battery_voltage
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_continuous_action
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_VNS_water_led_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_parse_data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_chb_entery_screen
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_key_ok_stimulate_cha_entery_screen
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_gui_key_back_process
</UL>

<P><STRONG><a name="[57]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop_Disable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[e7]"></a>HAL_IWDG_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f1xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
</UL>

<P><STRONG><a name="[111]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
</UL>

<P><STRONG><a name="[11d]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e8]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[eb]"></a>HAL_MspInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[f7]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[ed]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[e9]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[e2]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
</UL>

<P><STRONG><a name="[f1]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[f2]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[120]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[ef]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[f0]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[f3]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ec]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[102]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[104]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[11c]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[f4]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[f5]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[5c]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_On
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_On
</UL>

<P><STRONG><a name="[5a]"></a>HAL_TIM_Base_Stop_IT</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Stop_IT))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Fes_Ch_Timer_Off
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch2_Pwm_Off
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Ch1_Pwm_Off
</UL>

<P><STRONG><a name="[f8]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[fe]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[ff]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[100]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[101]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_countdown_time
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer4_Ch2_Pwm_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_Timer3_Ch1_Pwm_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[103]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[10b]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[109]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[105]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 520 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[10d]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_UART4_Init
</UL>

<P><STRONG><a name="[10e]"></a>HAL_UART_MspInit</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[11f]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[aa]"></a>HAL_UART_Transmit</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_response_data
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_4
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_3
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_2
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_play_audio_1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_check_response_data
</UL>

<P><STRONG><a name="[10c]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[121]"></a>HAL_USART1_IRQHandler_Callback</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, usart.o(i.HAL_USART1_IRQHandler_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_USART1_IRQHandler_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>IWDG_Feed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, iwdg.o(i.IWDG_Feed))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_send_hr_cycle
</UL>

<P><STRONG><a name="[c6]"></a>LCD_Clear</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_Clear &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Logo_Picture
</UL>

<P><STRONG><a name="[c2]"></a>LCD_Clear_Fill</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, lcd.o(i.LCD_Clear_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_Clear_Fill &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawImageNum_Ex
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Clear_No_Icon
</UL>

<P><STRONG><a name="[112]"></a>LCD_DrawPoint</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>

<P><STRONG><a name="[cf]"></a>LCD_DrawPoint_16Bit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawPoint_16Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawPoint_16Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Drawbmp16X
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>

<P><STRONG><a name="[bb]"></a>LCD_Init</STRONG> (Thumb, 3468 bytes, Stack size 40 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_Init &rArr; GUI_Display_Logo_Picture &rArr; LCD_Clear &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetParam
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RESET
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Logo_Picture
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[114]"></a>LCD_RESET</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd.o(i.LCD_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_RESET &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[ce]"></a>LCD_SetCursor</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, lcd.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetCursor &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawLine
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>

<P><STRONG><a name="[115]"></a>LCD_SetParam</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetParam))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[de]"></a>LCD_SetWindows</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, lcd.o(i.LCD_SetWindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear_Fill
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Drawbmp16X
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawImage
</UL>

<P><STRONG><a name="[117]"></a>LCD_ShowChar</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, gui.o(i.LCD_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_16Bit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time_Ex
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time
</UL>

<P><STRONG><a name="[c3]"></a>LCD_ShowNum_Time</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, gui.o(i.LCD_ShowNum_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_ShowNum_Time &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
</UL>

<P><STRONG><a name="[c5]"></a>LCD_ShowNum_Time_Ex</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, gui.o(i.LCD_ShowNum_Time_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time_Ex
</UL>

<P><STRONG><a name="[c4]"></a>LCD_ShowString</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, gui.o(i.LCD_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FES_Display_Ui_Stimu_Time
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time_Ex
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Display_Countdown_Time
</UL>

<P><STRONG><a name="[113]"></a>LCD_WR_REG</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lcd.o(i.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[116]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindows
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>

<P><STRONG><a name="[b4]"></a>MX_ADC1_Init</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, adc.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b5]"></a>MX_DAC_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dac.o(i.MX_DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_DAC_Init &rArr; HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b3]"></a>MX_GPIO_Init</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_REMAP_CONFIG
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b8]"></a>MX_IWDG_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, iwdg.o(i.MX_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_IWDG_Init &rArr; HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b9]"></a>MX_TIM2_Init</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, tim.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[76]"></a>MX_TIM3_Init</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, tim.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_upper_set_para
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_chb_swallow_set_para
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_upper_set_para
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_FES_cha_swallow_set_para
</UL>

<P><STRONG><a name="[ba]"></a>MX_TIM5_Init</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, tim.o(i.MX_TIM5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM5_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b6]"></a>MX_UART4_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_UART4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_UART4_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[b7]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[11e]"></a>SystemClock_Config</STRONG> (Thumb, 130 bytes, Stack size 96 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TIM4_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TIM5_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; BC_countdown_time &rArr; BC_FES_countdown_time &rArr; BC_FES_chb_countdown_time &rArr; GUI_Display_Countdown_Time_Ex &rArr; LCD_ShowNum_Time_Ex &rArr; LCD_ShowChar &rArr; LCD_SetWindows &rArr; LCD_WriteRAM_Prepare &rArr; LCD_WR_REG
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[f6]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, stm32f1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[f9]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART1_IRQHandler_Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[130]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[131]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = main &rArr; BC_mcu_init &rArr; BC_VNS_water_led_init &rArr; GUI_Display_Ui_Main_Menu &rArr; GUI_Display_Ui_Main_Back &rArr; Get_Adc_Battery_Val &rArr; Get_Adc_Average &rArr; Get_Adc &rArr; HAL_ADC_PollForConversion &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_task
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC_mcu_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[118]"></a>mypow</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui.o(i.mypow))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time_Ex
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowNum_Time
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ee]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[fc]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[fa]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[fb]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[49]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[107]"></a>UART_EndRxTransfer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[106]"></a>UART_Receive_IT</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[10f]"></a>UART_SetConfig</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[110]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
